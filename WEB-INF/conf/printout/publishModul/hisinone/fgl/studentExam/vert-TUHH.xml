<?xml version="1.0" encoding="UTF-8"?>
<publishDetail VMErrorFile="publish/pmodul/vm/error.vm" WriteXMLFileTo="[LOGROOT]//exportVert-TUHH.xml" active="y">
	<Reports  ueberschreiben="y" tanRequired="n" directPDF="y" database="hisinone" global="[CURRENTTIME], [TODAY]">
		<Transform.SQL ElementName="Root" storeFields="personpublish">
			SELECT DISTINCT 
				person.id AS personpublish, person.firstname AS firstname, person.surname AS surname, person.allfirstnames AS allfirstnames,
				person.birthdate AS birthdate, to_char(person.birthdate,'MM/DD/YYYY') AS birthdateEn, person.birthcity AS birthcity,
				address.street AS street, address.postcode AS postcode, address.city AS city, address.addressaddition AS addressaddition, 
				student.registrationnumber AS mtknr, degree_program.id AS dpId					
			FROM degree_program
			JOIN person ON (degree_program.person_id = person.id)
			JOIN student ON (person.id = student.person_id)
			JOIN address ON (person.id = address.person_id)
			WHERE degree_program.id IN ([dpSelectedIds])
				AND degree_program.person_id = person.id
				AND person.id IN ([PersonId])
				AND degree_program.belongs_to='STUDENT'
				AND ((person.id IN ([PersonId]) AND person.id=[session_ident_H]) OR ([session_bereich] &lt;&gt; 'student'))
				AND address.addresstype = 'Postaddress'
				ORDER BY person.surname;
				
			<!-- FGL: -->
			<Transform.SubSQL ElementName="reportPeriod">
				SELECT DISTINCT period.term_year As Sem, period.term_type_id As SemType, period.startdate AS beginn, date(period.enddate) AS ende
				FROM period
				WHERE period.id = [where.reportPeriodId]	
			</Transform.SubSQL>
				
			<!-- Dekanat / Fachbereich de + en -->
			<Transform.SubSQL ElementName="orgunit" >
				SELECT DISTINCT orgunit.longtext AS dekanat, orgunit.id AS orgunitId 
				FROM degree_program dp 
				JOIN degree_program_progress dpp ON (dpp.degree_program_id = dp.id)
				JOIN course_of_study cos ON (dpp.course_of_study_id = cos.id)
				JOIN orgunit ON (cos.orgunit_lid=orgunit.lid)
				WHERE dp.id IN ([dpId]);
				<Transform.SubSQL ElementName="dekanatEn" singleTag="dekanatEn">
						SELECT DISTINCT 
								fieldvalue AS dekanatEn
						FROM foreigntext ftOrgunit 
						WHERE ftOrgunit.reftable = 'orgunit'
						AND ftOrgunit.refcolumn = 'longtext'
						AND ftOrgunit.refid IN ([orgunitId])
						AND ftOrgunit.k_language_id = 5;
				</Transform.SubSQL>
			</Transform.SubSQL>
			
			<!-- Fach de + en und Abschluss -->
			<Transform.SubSQL ElementName="subject" >
				SELECT DISTINCT 
					s.id AS subjectId,
					s.longtext AS fachL,
					s.uniquename AS fachU,
					d.longtext AS abschlL, 
					d.shorttext AS abschlK,
					d.uniquename AS abschlU
				FROM degree_program dp 
				JOIN degree_program_progress dpp ON (dpp.degree_program_id = dp.id)
				JOIN course_of_study cos ON (dpp.course_of_study_id = cos.id)
				JOIN subject s ON (cos.subject_lid = s.lid)
				JOIN degree d ON (cos.degree_lid = d.lid)
				WHERE  
				dp.id IN ([dpId]);
				<Transform.SubSQL ElementName="fachL_en"  singleTag="fachL_en">
					SELECT DISTINCT 
							fieldvalue AS fachL_en
					FROM foreigntext ftFach 
					WHERE ftFach.reftable = 'subject'
					AND ftFach.refcolumn = 'longtext'
					AND ftFach.refid IN ([subjectId])
					AND ftFach.k_language_id = 5;
				</Transform.SubSQL>
			</Transform.SubSQL>
			
			<!-- Vertiefung de + en -->
			<Transform.SubSQL ElementName="vert" singleTag="vert">
				SELECT DISTINCT 
					m.longtext AS vert
				FROM degree_program dp 
				JOIN degree_program_progress dpp ON (dpp.degree_program_id = dp.id)
				JOIN course_of_study cos ON (dpp.course_of_study_id = cos.id)
				JOIN major_field_of_study m ON (cos.major_field_of_study_lid = m.lid)
				WHERE  dp.id = [dpId]
					and dpp.id in (SELECT DISTINCT MAX(dpp.id) FROM degree_program dp, degree_program_progress dpp 
			   		WHERE dpp.degree_program_id = dp.id AND dp.id =[dpId]);
			</Transform.SubSQL>
			<Transform.SubSQL ElementName="vertEn" singleTag="vertEn">
				SELECT DISTINCT 
					fieldvalue AS vertEn
				FROM degree_program dp 
				JOIN degree_program_progress dpp ON (dpp.degree_program_id = dp.id)
				JOIN course_of_study cos ON (dpp.course_of_study_id = cos.id)
				JOIN major_field_of_study m ON (cos.major_field_of_study_lid = m.lid)
				LEFT JOIN foreigntext f ON (f.reftable = 'major_field_of_study'
							AND f.refcolumn = 'longtext'
							AND f.refid = m.id
							AND f.k_language_id = 5)
				WHERE  dp.id =[dpId]
					and dpp.id in (SELECT DISTINCT MAX(dpp.id) FROM degree_program dp, degree_program_progress dpp 
			   		WHERE dpp.degree_program_id = dp.id AND dp.id =[dpId]);
			</Transform.SubSQL>
			
			<!-- Datum der Einschreibung in den selektierten Studiengang -->
			<Transform.SubSQL ElementName="startdate" singleTag="startdate">
				SELECT 
				MIN(startdate) AS startdate 
				FROM degree_program_progress
				WHERE 
				degree_program_id = [dpId];
			</Transform.SubSQL>
			<Transform.SubSQL ElementName="startdateEn" singleTag="startdateEn">
				SELECT 
				to_char(MIN(startdate),'MM/DD/YYYY') AS startdateEn
				FROM degree_program_progress
				WHERE 
				degree_program_id = [dpId];
			</Transform.SubSQL>
			
			<!-- Tag der Exmatrikulation bzw. wann der Studium in den selektierten Studiengang beendet wurde -->
			<Transform.SubSQL ElementName="ExmaDat" singleTag="ExmaDat">
				SELECT DISTINCT MAX(finished) AS ExmaDat 
				FROM degree_program_progress
				WHERE 
				degree_program_id=[dpId];
			</Transform.SubSQL>
			<Transform.SubSQL ElementName="ExmaDatEn" singleTag="ExmaDatEn">
				SELECT 
				to_char(MAX(finished),'MM/DD/YYYY') AS ExmaDatEn
				FROM degree_program_progress
				WHERE 
				degree_program_id = [dpId];
			</Transform.SubSQL>
			
			
			<!-- wird bei Zeugis benutzt um abzufragen, ob 950 existiert, wenn ja, dann wird eine neue Vorlage aufgerufen -->
			<Transform.SubSQL ElementName="examData">			
				SELECT DISTINCT
					u_abschluss.defaulttext AS unit,
					u_abschluss.elementnr AS elementnr
				FROM unit u_abschluss, unit_studies us, unit u, unitrelation ur, examplan e
				WHERE us.unit_id = u.id
				AND u.id = ur.parent_unit_id
				AND ur.child_unit_id = u_abschluss.id
				AND e.unit_id=u_abschluss.id 
				AND e.person_id = [Root.personpublish] 
				AND u.k_elementtype_id = 4 
				AND	u_abschluss.elementnr='950';
			</Transform.SubSQL>
			
			<!-- Abschlussdatum -->
			<Transform.SubSQL ElementName="finalExamData">			
				SELECT DISTINCT
					e.date_of_work AS dateOfWork
				FROM degree_program_progress dpp
				JOIN degree_program dp ON dpp.degree_program_id = dp.id
				JOIN course_of_study cos ON cos.id=dpp.course_of_study_id
				JOIN unit_studies us ON cos.lid=us.course_of_study_lid
				JOIN unit_top ut ON us.unit_id = ut.top_unit_id
				JOIN unit u ON u.id = ut.unit_id
				JOIN unitrelation ur ON u.id = ur.parent_unit_id
				JOIN unit u_abschluss ON ur.child_unit_id = u_abschluss.id
				JOIN examplan e ON e.unit_id=u_abschluss.id 
				JOIN examrelation ex ON e.default_examrelation_id=ex.id
				JOIN examresult er ON e.default_examrelation_id = er.examrelation_id
				WHERE dp.person_id = [Root.personpublish] 
				AND dp.id IN ([dpId]) 
				<!-- course_of_study_lid IN ([cosSelectedLids])  -->
				AND e.person_id = dp.person_id 
				AND u.k_elementtype_id = 4 
				AND u_abschluss.elementnr = '200'
				AND ex.k_workstatus_id = 1;
				
				<Transform.SubSQL ElementName="abschlussSemester">
				SELECT DISTINCT 
					period.id AS periodId,
					period.longtext AS abschlussSemester
				FROM period
				INNER JOIN period_usage ON (period_usage.period_id = period.id)
				INNER JOIN k_period_usage ON (k_period_usage.id = period_usage.k_period_usage_id)
				WHERE k_period_usage.hiskey_id = 32
				AND period.startdate &lt;= '[dateOfWork]'
				AND period.enddate &gt;= '[dateOfWork]'
				
					<Transform.SubSQL ElementName="semesterEn" singleTag="semesterEn">
					 SELECT DISTINCT 
							fieldvalue AS semesterEn
					 FROM foreigntext ftPeriod 
					 WHERE ftPeriod.reftable = 'period'
						AND ftPeriod.refcolumn = 'longtext'
						AND ftPeriod.refid IN ([periodId])
						AND ftPeriod.k_language_id = 5;
					</Transform.SubSQL>
				</Transform.SubSQL>
			</Transform.SubSQL>
			
		</Transform.SQL>
	</Reports>
</publishDetail>